diff --git a/Lib/java/director.swg b/Lib/java/director.swg
index d45cdbb..0c4c155 100644
--- a/Lib/java/director.swg
+++ b/Lib/java/director.swg
@@ -128,8 +128,14 @@ namespace Swig {
 #else
         director_->swig_jvm_->AttachCurrentThread(jenv, NULL);
 #endif
+#ifdef SWIG_LOCAL_FRAME_CAPACITY
+        jenv_->PushLocalFrame(SWIG_LOCAL_FRAME_CAPACITY);
+#endif 
       }
       ~JNIEnvWrapper() {
+#ifdef SWIG_LOCAL_FRAME_CAPACITY
+        jenv_->PopLocalFrame(NULL);
+#endif        
 #if !defined(SWIG_JAVA_NO_DETACH_CURRENT_THREAD)
         // Some JVMs, eg jdk-1.4.2 and lower on Solaris have a bug and crash with the DetachCurrentThread call.
         // However, without this call, the JVM hangs on exit when the thread was not created by the JVM and creates a memory leak.
@@ -149,7 +155,7 @@ namespace Swig {
     void swig_disconnect_director_self(const char *disconn_method) {
       JNIEnvWrapper jnienv(this) ;
       JNIEnv *jenv = jnienv.getJNIEnv() ;
-      jobject jobj = swig_self_.peek();
+      jobject jobj = swig_self_.get(jenv);
 #if defined(DEBUG_DIRECTOR_OWNED)
       std::cout << "Swig::Director::disconnect_director_self(" << jobj << ")" << std::endl;
 #endif
@@ -162,6 +168,7 @@ namespace Swig {
           jenv->CallVoidMethod(jobj, disconn_meth);
         }
       }
+      if (jobj) jenv->DeleteLocalRef(jobj);
     }
 
   public:
